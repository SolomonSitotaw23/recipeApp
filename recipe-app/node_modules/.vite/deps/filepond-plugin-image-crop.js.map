{
  "version": 3,
  "sources": ["../../filepond-plugin-image-crop/dist/filepond-plugin-image-crop.esm.js", "dep:filepond-plugin-image-crop"],
  "sourcesContent": ["/*!\n * FilePondPluginImageCrop 2.0.6\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst isImage = file => /^image/.test(file.type);\n\n/**\n * Image Auto Crop Plugin\n */\nconst plugin = ({ addFilter, utils }) => {\n  const { Type, isFile, getNumericAspectRatioFromString } = utils;\n\n  // tests if crop is allowed on this item\n  const allowCrop = (item, query) =>\n    !(!isImage(item.file) || !query('GET_ALLOW_IMAGE_CROP'));\n\n  const isObject = value => typeof value === 'object';\n\n  const isNumber = value => typeof value === 'number';\n\n  const updateCrop = (item, obj) =>\n    item.setMetadata('crop', Object.assign({}, item.getMetadata('crop'), obj));\n\n  // extend item methods\n  addFilter('DID_CREATE_ITEM', (item, { query }) => {\n    item.extend('setImageCrop', crop => {\n      if (!allowCrop(item, query) || !isObject(center)) return;\n      item.setMetadata('crop', crop);\n      return crop;\n    });\n\n    item.extend('setImageCropCenter', center => {\n      if (!allowCrop(item, query) || !isObject(center)) return;\n      return updateCrop(item, { center });\n    });\n\n    item.extend('setImageCropZoom', zoom => {\n      if (!allowCrop(item, query) || !isNumber(zoom)) return;\n      return updateCrop(item, { zoom: Math.max(1, zoom) });\n    });\n\n    item.extend('setImageCropRotation', rotation => {\n      if (!allowCrop(item, query) || !isNumber(rotation)) return;\n      return updateCrop(item, { rotation });\n    });\n\n    item.extend('setImageCropFlip', flip => {\n      if (!allowCrop(item, query) || !isObject(flip)) return;\n      return updateCrop(item, { flip });\n    });\n\n    item.extend('setImageCropAspectRatio', newAspectRatio => {\n      if (!allowCrop(item, query) || typeof newAspectRatio === 'undefined')\n        return;\n\n      const currentCrop = item.getMetadata('crop');\n\n      const aspectRatio = getNumericAspectRatioFromString(newAspectRatio);\n\n      const newCrop = {\n        center: {\n          x: 0.5,\n          y: 0.5\n        },\n        flip: currentCrop\n          ? Object.assign({}, currentCrop.flip)\n          : {\n              horizontal: false,\n              vertical: false\n            },\n        rotation: 0,\n        zoom: 1,\n        aspectRatio\n      };\n\n      item.setMetadata('crop', newCrop);\n\n      return newCrop;\n    });\n  });\n\n  // subscribe to file transformations\n  addFilter(\n    'DID_LOAD_ITEM',\n    (item, { query }) =>\n      new Promise((resolve, reject) => {\n        // get file reference\n        const file = item.file;\n\n        // if this is not an image we do not have any business cropping it and we'll continue with the unaltered dataset\n        if (!isFile(file) || !isImage(file) || !query('GET_ALLOW_IMAGE_CROP')) {\n          return resolve(item);\n        }\n\n        // already has crop metadata set?\n        const crop = item.getMetadata('crop');\n        if (crop) {\n          return resolve(item);\n        }\n\n        // get the required aspect ratio and exit if it's not set\n        const humanAspectRatio = query('GET_IMAGE_CROP_ASPECT_RATIO');\n\n        // set default crop rectangle\n        item.setMetadata('crop', {\n          center: {\n            x: 0.5,\n            y: 0.5\n          },\n          flip: {\n            horizontal: false,\n            vertical: false\n          },\n          rotation: 0,\n          zoom: 1,\n          aspectRatio: humanAspectRatio\n            ? getNumericAspectRatioFromString(humanAspectRatio)\n            : null\n        });\n\n        // we done!\n        resolve(item);\n      })\n  );\n\n  // Expose plugin options\n  return {\n    options: {\n      // enable or disable image cropping\n      allowImageCrop: [true, Type.BOOLEAN],\n\n      // the aspect ratio of the crop ('1:1', '16:9', etc)\n      imageCropAspectRatio: [null, Type.STRING]\n    }\n  };\n};\n\n// fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\nconst isBrowser =\n  typeof window !== 'undefined' && typeof window.document !== 'undefined';\nif (isBrowser) {\n  document.dispatchEvent(\n    new CustomEvent('FilePond:pluginloaded', { detail: plugin })\n  );\n}\n\nexport default plugin;\n", "import d from \"./node_modules/filepond-plugin-image-crop/dist/filepond-plugin-image-crop.esm.js\";export default d;"],
  "mappings": "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",
  "names": ["center"]
}
